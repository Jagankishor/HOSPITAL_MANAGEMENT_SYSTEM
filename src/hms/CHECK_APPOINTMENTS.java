/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hms;

/**
 *
 * @author jagan kishor
 */

import java.sql.*;


import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class CHECK_APPOINTMENTS extends javax.swing.JInternalFrame {

    /**
     * Creates new form CHECK_APPOINTMENTS
     */
    
    TableModel tm;
    Vector data;

    
    public CHECK_APPOINTMENTS() {
        
        super("CHECK_APPOINTMENTS" , true , true, true, true);
        
        initComponents();
        
        table_update();
        
        DefaultTableModel tm = (DefaultTableModel)jTable1.getModel();
        Vector data = tm.getDataVector();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment Date", "Appointment Time", "Appointment ID", "Patient Name", "Doctor", "Date", "Time", "Resaon", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1216, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CHECK_APPOINTMENTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CHECK_APPOINTMENTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CHECK_APPOINTMENTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CHECK_APPOINTMENTS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CHECK_APPOINTMENTS().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void table_update() {
    
   try {
    // Establishing the connection only, not registering already done
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hms", "root", "");

    // Create a Statement object
    Statement st = con.createStatement();

    // SQL SELECT query
    ResultSet rs = st.executeQuery("SELECT * FROM book_appointments");

    // Get the metadata
    ResultSetMetaData RSMD = rs.getMetaData();

    // Get column count
    int CC = RSMD.getColumnCount();

    // Get the table model from your form table
    DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();

    // Clear existing columns and data
    DFT.setRowCount(0);
    DFT.setColumnCount(0);

    // Add column names to the table model
    for (int i = 1; i <= CC; i++) {
        DFT.addColumn(RSMD.getColumnName(i));
    }

    // Process the result set and add rows to the table model
    while (rs.next()) {
        Vector<String> v2 = new Vector<>();

        for (int i = 1; i <= CC; i++) {
            v2.add(rs.getString(i));
        }
        DFT.addRow(v2);
    }

    // Close resources
    rs.close();
    st.close();
    con.close();
} catch (Exception e) {
    e.printStackTrace();
    System.out.println("Exception: " + e);
}

    
    }
}

